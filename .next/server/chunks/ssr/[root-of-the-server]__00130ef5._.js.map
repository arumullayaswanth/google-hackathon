{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-answer.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview This file defines a Genkit flow to automatically suggest an AI-generated answer to a question.\n *\n * - suggestAnswer - A function that handles the AI-generated answer suggestion process.\n * - SuggestAnswerInput - The input type for the suggestAnswer function.\n * - SuggestAnswerOutput - The return type for the suggestAnswer function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestAnswerInputSchema = z.object({\n  question: z.string().describe('The question to be answered.'),\n});\nexport type SuggestAnswerInput = z.infer<typeof SuggestAnswerInputSchema>;\n\nconst SuggestAnswerOutputSchema = z.object({\n  suggestedAnswer: z.string().describe('The AI-generated suggested answer.'),\n});\nexport type SuggestAnswerOutput = z.infer<typeof SuggestAnswerOutputSchema>;\n\nexport async function suggestAnswer(input: SuggestAnswerInput): Promise<SuggestAnswerOutput> {\n  return suggestAnswerFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestAnswerPrompt',\n  input: {schema: SuggestAnswerInputSchema},\n  output: {schema: SuggestAnswerOutputSchema},\n  prompt: `You are an AI assistant designed to provide helpful answers to user questions.\n\n  Question: {{{question}}}\n\n  Please provide a concise and informative answer to the question above. Your answer should be formatted in Markdown.`,\n});\n\nconst suggestAnswerFlow = ai.defineFlow(\n  {\n    name: 'suggestAnswerFlow',\n    inputSchema: SuggestAnswerInputSchema,\n    outputSchema: SuggestAnswerOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;qHAI0G,CAAC;AACtH;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analytics-bot.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview This file defines a Genkit flow for an AI analytics bot.\n *\n * - askAnalyticsBot - A function that handles answering questions about analytics data.\n * - AnalyticsBotInput - The input type for the askAnalyticsBot function.\n * - AnalyticsBotOutput - The return type for the askAnalyticsBot function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport type { AnalyticsData } from '@/types';\n\nconst AnalyticsBotInputSchema = z.object({\n  question: z.string().describe('The user\\'s question about the analytics data.'),\n  analyticsData: z.any().describe('The analytics data as a JSON object.'),\n});\nexport type AnalyticsBotInput = z.infer<typeof AnalyticsBotInputSchema>;\n\nconst AnalyticsBotOutputSchema = z.object({\n  answer: z.string().describe('The AI-generated answer to the question.'),\n});\nexport type AnalyticsBotOutput = z.infer<typeof AnalyticsBotOutputSchema>;\n\nexport async function askAnalyticsBot(input: AnalyticsBotInput): Promise<AnalyticsBotOutput> {\n  return analyticsBotFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyticsBotPrompt',\n  input: {schema: AnalyticsBotInputSchema},\n  output: {schema: AnalyticsBotOutputSchema},\n  prompt: `You are an AI assistant for a community Q&A platform. Your primary role is to answer questions based on the provided analytics data, but you can also answer general knowledge questions.\n\n  Here is the analytics data for the platform, in JSON format. Use this data to answer questions about platform usage, popular topics, user activity, etc.\n  \\`\\`\\`json\n  {{{json analyticsData}}}\n  \\`\\`\\`\n\n  Here is the user's question:\n  \"{{{question}}}\"\n\n  Please provide a clear and concise answer. If the question is about the platform's analytics, base your answer *only* on the data provided. If the question is general, answer it to the best of your ability. If you cannot answer a question, say so.`,\n});\n\nconst analyticsBotFlow = ai.defineFlow(\n  {\n    name: 'analyticsBotFlow',\n    inputSchema: AnalyticsBotInputSchema,\n    outputSchema: AnalyticsBotOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAGA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,eAAe,uIAAA,CAAA,IAAC,CAAC,GAAG,GAAG,QAAQ,CAAC;AAClC;AAGA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGO,eAAe,gBAAgB,KAAwB;IAC5D,OAAO,iBAAiB;AAC1B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAuB;IACvC,QAAQ;QAAC,QAAQ;IAAwB;IACzC,QAAQ,CAAC;;;;;;;;;;yPAU8O,CAAC;AAC1P;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\nimport { suggestAnswer } from '@/ai/flows/suggest-answer';\nimport { askAnalyticsBot } from '@/ai/flows/analytics-bot';\nimport type { AnalyticsData } from '@/types';\n\nexport async function getAiSuggestion(question: string) {\n  try {\n    const result = await suggestAnswer({ question });\n    return result.suggestedAnswer;\n  } catch (error) {\n    console.error('Error getting AI suggestion:', error);\n    return 'Sorry, I could not generate a suggestion at this time.';\n  }\n}\n\nexport async function getAnalyticsBotAnswer(question: string, analyticsData: AnalyticsData) {\n    if (!question || !analyticsData) {\n        return \"I need a question and data to work with.\";\n    }\n    try {\n        const result = await askAnalyticsBot({ question, analyticsData });\n        return result.answer;\n    } catch (error) {\n        console.error('Error getting AI analytics answer:', error);\n        return 'Sorry, I could not generate an answer at this time.';\n    }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAGO,eAAe,gBAAgB,QAAgB;IACpD,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE;YAAE;QAAS;QAC9C,OAAO,OAAO,eAAe;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;AAEO,eAAe,sBAAsB,QAAgB,EAAE,aAA4B;IACtF,IAAI,CAAC,YAAY,CAAC,eAAe;QAC7B,OAAO;IACX;IACA,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,sIAAA,CAAA,kBAAe,AAAD,EAAE;YAAE;YAAU;QAAc;QAC/D,OAAO,OAAO,MAAM;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO;IACX;AACJ;;;IArBsB;IAUA;;AAVA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/analytics/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAnalyticsBotAnswer as '60cde394dfc69c1c1577c3adebd448ff94fc9b91e0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/AnalyticsDashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AnalyticsDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnalyticsDashboard() from the server but AnalyticsDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/analytics/AnalyticsDashboard.tsx <module evaluation>\",\n    \"AnalyticsDashboard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iFACA","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/AnalyticsDashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AnalyticsDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnalyticsDashboard() from the server but AnalyticsDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/analytics/AnalyticsDashboard.tsx\",\n    \"AnalyticsDashboard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6DACA","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppShell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/AppShell.tsx <module evaluation>\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oEACA","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppShell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/AppShell.tsx\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gDACA","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/analytics/page.tsx"],"sourcesContent":["\nimport { AnalyticsDashboard } from '@/components/analytics/AnalyticsDashboard';\nimport { AppShell } from '@/components/layout/AppShell';\n\nexport default function AnalyticsPage() {\n    return (\n        <AppShell>\n            <main className=\"flex-1 p-4 md:p-6 lg:p-8\">\n                <AnalyticsDashboard />\n            </main>\n        </AppShell>\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEe,SAAS;IACpB,qBACI,8OAAC,wIAAA,CAAA,WAAQ;kBACL,cAAA,8OAAC;YAAK,WAAU;sBACZ,cAAA,8OAAC,qJAAA,CAAA,qBAAkB;;;;;;;;;;;;;;;AAInC","debugId":null}}]
}